<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EasyUiDataSet" targetNamespace="http://tempuri.org/EasyUiDataSet.xsd" xmlns:mstns="http://tempuri.org/EasyUiDataSet.xsd" xmlns="http://tempuri.org/EasyUiDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="JoinQueryTable" GeneratorFunctionsComponentClassName="JoinQueryTable" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="JoinQueryTable" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EasyUiDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EasyUiDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.XQH.EasyUi.Database.Properties.Settings.GlobalReference.Default.EasyUiDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FunctionItemTableAdapter" GeneratorDataComponentClassName="FunctionItemTableAdapter" Name="FunctionItem" UserDataComponentName="FunctionItemTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.FunctionItem" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[FunctionItem] WHERE (([Id] = @Original_Id) AND ([FunctionName] = @Original_FunctionName) AND ([ParentId] = @Original_ParentId) AND ((@IsNull_Url = 1 AND [Url] IS NULL) OR ([Url] = @Original_Url)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FunctionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FunctionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ParentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Url" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Url" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Url" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Url" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[FunctionItem] ([Id], [FunctionName], [ParentId], [Url]) VALUES (@Id, @FunctionName, @ParentId, @Url);
SELECT Id, FunctionName, ParentId, Url FROM FunctionItem WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FunctionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FunctionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ParentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Url" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Url" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM dbo.FunctionItem</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[FunctionItem] SET [Id] = @Id, [FunctionName] = @FunctionName, [ParentId] = @ParentId, [Url] = @Url WHERE (([Id] = @Original_Id) AND ([FunctionName] = @Original_FunctionName) AND ([ParentId] = @Original_ParentId) AND ((@IsNull_Url = 1 AND [Url] IS NULL) OR ([Url] = @Original_Url)));
SELECT Id, FunctionName, ParentId, Url FROM FunctionItem WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FunctionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FunctionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ParentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Url" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Url" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FunctionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FunctionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ParentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Url" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Url" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Url" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Url" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="FunctionName" DataSetColumn="FunctionName" />
              <Mapping SourceColumn="ParentId" DataSetColumn="ParentId" />
              <Mapping SourceColumn="Url" DataSetColumn="Url" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.FunctionItem" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetFunctionNameById" GetMethodModifier="Public" GetMethodName="GetFunctionNameById" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetFunctionNameById" UserSourceName="GetFunctionNameById">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT FunctionName, Id, ParentId, ISNULL(Url, '') AS Url
FROM FunctionItem
WHERE (Id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Id" DataSourceName="EasyUiDB.dbo.FunctionItem" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@id" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.FunctionItem" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetFunctionNameByPid" GetMethodModifier="Public" GetMethodName="GetFunctionNameByPid" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetFunctionNameByPid" UserSourceName="GetFunctionNameByPid">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT FunctionName, Id, ParentId, ISNULL(Url, '') AS Url
FROM FunctionItem
WHERE (ParentId = @ParentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ParentId" ColumnName="ParentId" DataSourceName="EasyUiDB.dbo.FunctionItem" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@ParentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.FunctionItem" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetModuleInfo" GetMethodModifier="Public" GetMethodName="GetModuleInfo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetModuleInfo" UserSourceName="GetModuleInfo">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT c.FunctionName, c.Id, c.ParentId, c.Url, p.Id, p.ParentId, p.Url FROM FunctionItem AS c INNER JOIN FunctionItem AS p ON c.ParentId = p.Id WHERE (c.ParentId = @pid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="pid" ColumnName="ParentId" DataSourceName="EasyUiDB.dbo.FunctionItem" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@pid" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.FunctionItem" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetOperationPermission" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetOperationPermission" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetOperationPermission" UserSourceName="GetOperationPermission">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT f.Id, f.FunctionName, f.ParentId, ISNULL(f.Url, N'') AS Url
FROM FunctionItem AS f INNER JOIN
      Permission AS p ON f.FunctionName = p.OperationName INNER JOIN
      RolePermission AS r ON p.PermissionId = r.PermissionId
WHERE (r.RoleId = @roleId) AND (f.ParentId = @parentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="RoleId" DataSourceName="EasyUiDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="parentId" ColumnName="ParentId" DataSourceName="EasyUiDB.dbo.FunctionItem" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@parentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoleTableAdapter" GeneratorDataComponentClassName="RoleTableAdapter" Name="Role" UserDataComponentName="RoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.Role" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Role] WHERE (([RoleId] = @Original_RoleId) AND ([RoleName] = @Original_RoleName) AND ((@IsNull_RoleDes = 1 AND [RoleDes] IS NULL) OR ([RoleDes] = @Original_RoleDes)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoleDes" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleDes" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleDes" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDes" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Role] ([RoleName], [RoleDes]) VALUES (@RoleName, @RoleDes);
SELECT RoleId, RoleName, RoleDes FROM Role WHERE (RoleId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleDes" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDes" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleId, RoleName, RoleDes FROM dbo.Role</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Role] SET [RoleName] = @RoleName, [RoleDes] = @RoleDes WHERE (([RoleId] = @Original_RoleId) AND ([RoleName] = @Original_RoleName) AND ((@IsNull_RoleDes = 1 AND [RoleDes] IS NULL) OR ([RoleDes] = @Original_RoleDes)));
SELECT RoleId, RoleName, RoleDes FROM Role WHERE (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleDes" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RoleDes" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleDes" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleDes" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDes" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
              <Mapping SourceColumn="RoleDes" DataSetColumn="RoleDes" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.Role" DbObjectType="Table" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="GetRoleIdByUsername" Modifier="Public" Name="GetRoleIdByUsername" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetRoleIdByUsername">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT r.RoleId
FROM Role AS r INNER JOIN
      RoleUser AS ru ON r.RoleId = ru.RoleId INNER JOIN
      [User] AS u ON u.UserId = ru.UserId
WHERE (u.Username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="Username" DataSourceName="EasyUiDB.dbo.[User]" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@username" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.Role" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetRoleInfo" GetMethodModifier="Public" GetMethodName="GetRoleInfo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetRoleInfo" UserSourceName="GetRoleInfo">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT RoleId, RoleName, RoleDes FROM dbo.Role</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserTableAdapter" GeneratorDataComponentClassName="UserTableAdapter" Name="User" UserDataComponentName="UserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.[User]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[User] WHERE (([UserId] = @Original_UserId) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([RealName] = @Original_RealName) AND ([Sex] = @Original_Sex) AND ([Address] = @Original_Address))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RealName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RealName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Sex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[User] ([Username], [Password], [RealName], [Sex], [Address]) VALUES (@Username, @Password, @RealName, @Sex, @Address);
SELECT UserId, Username, Password, RealName, Sex, Address FROM [User] WHERE (UserId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RealName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RealName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Sex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM dbo.[User]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[User] SET [Username] = @Username, [Password] = @Password, [RealName] = @RealName, [Sex] = @Sex, [Address] = @Address WHERE (([UserId] = @Original_UserId) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([RealName] = @Original_RealName) AND ([Sex] = @Original_Sex) AND ([Address] = @Original_Address));
SELECT UserId, Username, Password, RealName, Sex, Address FROM [User] WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RealName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RealName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Sex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RealName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RealName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Sex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserId" ColumnName="UserId" DataSourceName="EasyUiDB.dbo.[User]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="RealName" DataSetColumn="RealName" />
              <Mapping SourceColumn="Sex" DataSetColumn="Sex" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.[User]" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetUserByUsername" GetMethodModifier="Public" GetMethodName="GetUserByUsername" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetUserByUsername" UserSourceName="GetUserByUsername">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT UserId, Username, Password, RealName, Sex, Address
FROM [User]
WHERE (Username = @username) AND (Password = @password)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="Username" DataSourceName="EasyUiDB.dbo.[User]" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@username" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="password" ColumnName="Password" DataSourceName="EasyUiDB.dbo.[User]" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.[User]" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetUserInfo" GetMethodModifier="Public" GetMethodName="GetUserInfo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetUserInfo" UserSourceName="GetUserInfo">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Address, Password, RealName, Sex, UserId, Username FROM [User]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PermissionTableAdapter" GeneratorDataComponentClassName="PermissionTableAdapter" Name="Permission" UserDataComponentName="PermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.Permission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Permission] ([PermissionId], [OperationModule], [OperationName], [OperationOn]) VALUES (@PermissionId, @OperationModule, @OperationName, @OperationOn)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OperationModule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OperationModule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OperationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OperationName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@OperationOn" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="OperationOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PermissionId, OperationModule, OperationName, OperationOn FROM dbo.Permission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PermissionId" DataSetColumn="PermissionId" />
              <Mapping SourceColumn="OperationModule" DataSetColumn="OperationModule" />
              <Mapping SourceColumn="OperationName" DataSetColumn="OperationName" />
              <Mapping SourceColumn="OperationOn" DataSetColumn="OperationOn" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.Permission" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetChildPermission" GetMethodModifier="Public" GetMethodName="GetChildPermission" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetChildPermission" UserSourceName="GetChildPermission">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT PermissionId, OperationModule, OperationName, OperationOn
FROM Permission
WHERE (OperationModule = @operationModule)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="operationModule" ColumnName="OperationModule" DataSourceName="EasyUiDB.dbo.Permission" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@operationModule" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="OperationModule" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.Permission" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetParentPermission" GetMethodModifier="Public" GetMethodName="GetParentPermission" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetParentPermission" UserSourceName="GetParentPermission">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT *
FROM Permission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolePermissionTableAdapter" GeneratorDataComponentClassName="RolePermissionTableAdapter" Name="RolePermission" UserDataComponentName="RolePermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.RolePermission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RolePermission] WHERE (([Id] = @Original_Id) AND ([RoleId] = @Original_RoleId) AND ([PermissionId] = @Original_PermissionId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RolePermission] ([RoleId], [PermissionId]) VALUES (@RoleId, @PermissionId);
SELECT Id, RoleId, PermissionId FROM RolePermission WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, RoleId, PermissionId FROM dbo.RolePermission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RolePermission] SET [RoleId] = @RoleId, [PermissionId] = @PermissionId WHERE (([Id] = @Original_Id) AND ([RoleId] = @Original_RoleId) AND ([PermissionId] = @Original_PermissionId));
SELECT Id, RoleId, PermissionId FROM RolePermission WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
              <Mapping SourceColumn="PermissionId" DataSetColumn="PermissionId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy2" GeneratorSourceName="AddPermission" Modifier="Public" Name="AddPermission" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="AddPermission">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[RolePermission] ([RoleId], [PermissionId]) VALUES (@RoleId, @PermissionId);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="EasyUiDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PermissionId" ColumnName="PermissionId" DataSourceName="EasyUiDB.dbo.RolePermission" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeletePermission" Modifier="Public" Name="DeletePermission" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeletePermission">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>delete from RolePermission where RoleId = @roleId and PermissionId = @permissionId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="RoleId" DataSourceName="EasyUiDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="permissionId" ColumnName="PermissionId" DataSourceName="EasyUiDB.dbo.RolePermission" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@permissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.RolePermission" DbObjectType="Table" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="IsPermissionOn" Modifier="Public" Name="IsPermissionOn" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="IsPermissionOn">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT PermissionId
FROM RolePermission
WHERE (RoleId = @roleID) AND (PermissionId = @permissionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="roleID" ColumnName="RoleId" DataSourceName="EasyUiDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="permissionId" ColumnName="PermissionId" DataSourceName="EasyUiDB.dbo.RolePermission" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@permissionId" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="EasyUiDBConnectionString (Settings)" DbObjectName="EasyUiDB.dbo.FunctionItem" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetOperationPermission" MethodsParameterType="CLR" Modifier="Public" Name="GetOperationPermission" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetOperationPermission">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT f.Id, f.FunctionName, f.ParentId, f.Url
FROM FunctionItem AS f INNER JOIN
      Permission AS p ON f.FunctionName = p.OperationName INNER JOIN
      RolePermission AS rp ON p.PermissionId = rp.PermissionId INNER JOIN
      Role AS r ON r.RoleId = rp.RoleId
WHERE (f.ParentId = @pid) AND (r.RoleId = @roleId) AND (p.OperationOn = @onoff)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="pid" ColumnName="ParentId" DataSourceName="EasyUiDB.dbo.FunctionItem" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@pid" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ParentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="RoleId" DataSourceName="EasyUiDB.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="onoff" ColumnName="OperationOn" DataSourceName="EasyUiDB.dbo.Permission" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@onoff" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="OperationOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EasyUiDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="EasyUiDataSet" msprop:Generator_DataSetName="EasyUiDataSet" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="FunctionItem" msprop:Generator_UserTableName="FunctionItem" msprop:Generator_RowDeletedName="FunctionItemRowDeleted" msprop:Generator_RowChangedName="FunctionItemRowChanged" msprop:Generator_RowClassName="FunctionItemRow" msprop:Generator_RowChangingName="FunctionItemRowChanging" msprop:Generator_RowEvArgName="FunctionItemRowChangeEvent" msprop:Generator_RowEvHandlerName="FunctionItemRowChangeEventHandler" msprop:Generator_TableClassName="FunctionItemDataTable" msprop:Generator_TableVarName="tableFunctionItem" msprop:Generator_RowDeletingName="FunctionItemRowDeleting" msprop:Generator_TablePropName="FunctionItem">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_UserColumnName="Id" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInTable="IdColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FunctionName" msprop:Generator_UserColumnName="FunctionName" msprop:Generator_ColumnPropNameInRow="FunctionName" msprop:Generator_ColumnVarNameInTable="columnFunctionName" msprop:Generator_ColumnPropNameInTable="FunctionNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ParentId" msprop:Generator_UserColumnName="ParentId" msprop:Generator_ColumnPropNameInRow="ParentId" msprop:Generator_ColumnVarNameInTable="columnParentId" msprop:Generator_ColumnPropNameInTable="ParentIdColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Url" msprop:Generator_UserColumnName="Url" msprop:Generator_ColumnVarNameInTable="columnUrl" msprop:Generator_ColumnPropNameInRow="Url" msprop:Generator_ColumnPropNameInTable="UrlColumn" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Role" msprop:Generator_UserTableName="Role" msprop:Generator_RowDeletedName="RoleRowDeleted" msprop:Generator_RowChangedName="RoleRowChanged" msprop:Generator_RowClassName="RoleRow" msprop:Generator_RowChangingName="RoleRowChanging" msprop:Generator_RowEvArgName="RoleRowChangeEvent" msprop:Generator_RowEvHandlerName="RoleRowChangeEventHandler" msprop:Generator_TableClassName="RoleDataTable" msprop:Generator_TableVarName="tableRole" msprop:Generator_RowDeletingName="RoleRowDeleting" msprop:Generator_TablePropName="Role">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="RoleId" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" type="xs:int" />
              <xs:element name="RoleName" msprop:Generator_UserColumnName="RoleName" msprop:Generator_ColumnVarNameInTable="columnRoleName" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoleDes" msprop:Generator_UserColumnName="RoleDes" msprop:Generator_ColumnVarNameInTable="columnRoleDes" msprop:Generator_ColumnPropNameInRow="RoleDes" msprop:Generator_ColumnPropNameInTable="RoleDesColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="User" msprop:Generator_UserTableName="User" msprop:Generator_RowDeletedName="UserRowDeleted" msprop:Generator_RowChangedName="UserRowChanged" msprop:Generator_RowClassName="UserRow" msprop:Generator_RowChangingName="UserRowChanging" msprop:Generator_RowEvArgName="UserRowChangeEvent" msprop:Generator_RowEvHandlerName="UserRowChangeEventHandler" msprop:Generator_TableClassName="UserDataTable" msprop:Generator_TableVarName="tableUser" msprop:Generator_RowDeletingName="UserRowDeleting" msprop:Generator_TablePropName="User">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="UserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" type="xs:int" />
              <xs:element name="Username" msprop:Generator_UserColumnName="Username" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInTable="UsernameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_UserColumnName="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInTable="PasswordColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RealName" msprop:Generator_UserColumnName="RealName" msprop:Generator_ColumnVarNameInTable="columnRealName" msprop:Generator_ColumnPropNameInRow="RealName" msprop:Generator_ColumnPropNameInTable="RealNameColumn" type="xs:string" />
              <xs:element name="Sex" msprop:Generator_UserColumnName="Sex" msprop:Generator_ColumnVarNameInTable="columnSex" msprop:Generator_ColumnPropNameInRow="Sex" msprop:Generator_ColumnPropNameInTable="SexColumn" type="xs:string" />
              <xs:element name="Address" msprop:Generator_UserColumnName="Address" msprop:Generator_ColumnVarNameInTable="columnAddress" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Permission" msprop:Generator_UserTableName="Permission" msprop:Generator_RowDeletedName="PermissionRowDeleted" msprop:Generator_RowChangedName="PermissionRowChanged" msprop:Generator_RowClassName="PermissionRow" msprop:Generator_RowChangingName="PermissionRowChanging" msprop:Generator_RowEvArgName="PermissionRowChangeEvent" msprop:Generator_RowEvHandlerName="PermissionRowChangeEventHandler" msprop:Generator_TableClassName="PermissionDataTable" msprop:Generator_TableVarName="tablePermission" msprop:Generator_RowDeletingName="PermissionRowDeleting" msprop:Generator_TablePropName="Permission">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PermissionId" msprop:Generator_UserColumnName="PermissionId" msprop:Generator_ColumnVarNameInTable="columnPermissionId" msprop:Generator_ColumnPropNameInRow="PermissionId" msprop:Generator_ColumnPropNameInTable="PermissionIdColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OperationModule" msprop:Generator_UserColumnName="OperationModule" msprop:Generator_ColumnVarNameInTable="columnOperationModule" msprop:Generator_ColumnPropNameInRow="OperationModule" msprop:Generator_ColumnPropNameInTable="OperationModuleColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OperationName" msprop:Generator_UserColumnName="OperationName" msprop:Generator_ColumnVarNameInTable="columnOperationName" msprop:Generator_ColumnPropNameInRow="OperationName" msprop:Generator_ColumnPropNameInTable="OperationNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OperationOn" msprop:Generator_UserColumnName="OperationOn" msprop:Generator_ColumnVarNameInTable="columnOperationOn" msprop:Generator_ColumnPropNameInRow="OperationOn" msprop:Generator_ColumnPropNameInTable="OperationOnColumn" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RolePermission" msprop:Generator_UserTableName="RolePermission" msprop:Generator_RowDeletedName="RolePermissionRowDeleted" msprop:Generator_RowChangedName="RolePermissionRowChanged" msprop:Generator_RowClassName="RolePermissionRow" msprop:Generator_RowChangingName="RolePermissionRowChanging" msprop:Generator_RowEvArgName="RolePermissionRowChangeEvent" msprop:Generator_RowEvHandlerName="RolePermissionRowChangeEventHandler" msprop:Generator_TableClassName="RolePermissionDataTable" msprop:Generator_TableVarName="tableRolePermission" msprop:Generator_RowDeletingName="RolePermissionRowDeleting" msprop:Generator_TablePropName="RolePermission">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" type="xs:int" />
              <xs:element name="RoleId" msprop:Generator_UserColumnName="RoleId" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" type="xs:int" />
              <xs:element name="PermissionId" msprop:Generator_UserColumnName="PermissionId" msprop:Generator_ColumnVarNameInTable="columnPermissionId" msprop:Generator_ColumnPropNameInRow="PermissionId" msprop:Generator_ColumnPropNameInTable="PermissionIdColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:FunctionItem" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Role_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Role" />
      <xs:field xpath="mstns:RoleId" />
    </xs:unique>
    <xs:unique name="User_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:User" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
    <xs:unique name="RolePermission_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RolePermission" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>